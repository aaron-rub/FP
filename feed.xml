<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://aaron-rub.github.io/FP/feed.xml" rel="self" type="application/atom+xml" /><link href="https://aaron-rub.github.io/FP/" rel="alternate" type="text/html" /><updated>2022-12-02T15:31:25-06:00</updated><id>https://aaron-rub.github.io/FP/feed.xml</id><title type="html">Aaronâ€™s fastpges</title><subtitle>My CSP blog.</subtitle><entry><title type="html">Lesson Notes - 3.1 - 3.2</title><link href="https://aaron-rub.github.io/FP/collegeboard/2022/11/28/3.1-3.1-group-lesson.html" rel="alternate" type="text/html" title="Lesson Notes - 3.1 - 3.2" /><published>2022-11-28T00:00:00-06:00</published><updated>2022-11-28T00:00:00-06:00</updated><id>https://aaron-rub.github.io/FP/collegeboard/2022/11/28/3.1-3.1-group-lesson</id><author><name></name></author><category term="collegeboard" /><summary type="html"><![CDATA[Hacks and notes on 3.1 and 3.2]]></summary></entry><entry><title type="html">My experience throughout first tri!</title><link href="https://aaron-rub.github.io/FP/jupyter/python/2022/11/09/My-Experience-Tri1.html" rel="alternate" type="text/html" title="My experience throughout first tri!" /><published>2022-11-09T00:00:00-06:00</published><updated>2022-11-09T00:00:00-06:00</updated><id>https://aaron-rub.github.io/FP/jupyter/python/2022/11/09/My-Experience-Tri1</id><author><name></name></author><category term="jupyter" /><category term="python" /><summary type="html"><![CDATA[The problem I faced and how I managed]]></summary></entry><entry><title type="html">My final score</title><link href="https://aaron-rub.github.io/FP/jupyter/python/2022/11/09/collegeboard-scores.html" rel="alternate" type="text/html" title="My final score" /><published>2022-11-09T00:00:00-06:00</published><updated>2022-11-09T00:00:00-06:00</updated><id>https://aaron-rub.github.io/FP/jupyter/python/2022/11/09/collegeboard-scores</id><author><name></name></author><category term="jupyter" /><category term="python" /><summary type="html"><![CDATA[The score I got on my final]]></summary></entry><entry><title type="html">Problems and Corrections!</title><link href="https://aaron-rub.github.io/FP/jupyter/python/2022/10/25/my-progress.html" rel="alternate" type="text/html" title="Problems and Corrections!" /><published>2022-10-25T00:00:00-05:00</published><updated>2022-10-25T00:00:00-05:00</updated><id>https://aaron-rub.github.io/FP/jupyter/python/2022/10/25/my-progress</id><author><name></name></author><category term="jupyter" /><category term="python" /><summary type="html"><![CDATA[The problems wefaced and what we were able to solve]]></summary></entry><entry><title type="html">Python Web API Endpoints using Jokes</title><link href="https://aaron-rub.github.io/FP/techtalk/webapi" rel="alternate" type="text/html" title="Python Web API Endpoints using Jokes" /><published>2022-10-17T00:00:00-05:00</published><updated>2022-10-17T00:00:00-05:00</updated><id>https://aaron-rub.github.io/FP/techtalk/PBL-webapi_tutorial</id><author><name></name></author><category term="3.B" /><category term="5.A" /><category term="5.B" /><category term="C5.0" /><category term="C7.0" /><category term="C7.6" /><summary type="html"><![CDATA[A discussion on Web APIs. This is about creating a Web API (Jokes), and creating API that retains data as long as the Web Server is running. This is done using List and Dictionaries as the backend. Ultimately, this example could be extended by adding a database to the backend. However, for now, we are focussing on interaction of Frontend to Backend, this is called an Endpoint.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://aaron-rub.github.io/FP/images/python_restapi.png" /><media:content medium="image" url="https://aaron-rub.github.io/FP/images/python_restapi.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>